#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
# Using build pattern: meson
# autospec version: v3
# autospec commit: fae1327
#
Name     : dtc
Version  : 1.7.0
Release  : 18
URL      : https://www.kernel.org/pub/software/utils/dtc/dtc-1.7.0.tar.xz
Source0  : https://www.kernel.org/pub/software/utils/dtc/dtc-1.7.0.tar.xz
Summary  : The Device Tree Compiler
Group    : Development/Tools
License  : BSD-2-Clause GPL-2.0
Requires: dtc-bin = %{version}-%{release}
Requires: dtc-lib = %{version}-%{release}
Requires: dtc-license = %{version}-%{release}
BuildRequires : bison
BuildRequires : buildreq-meson
BuildRequires : flex
BuildRequires : pkgconfig(valgrind)
BuildRequires : pkgconfig(yaml-0.1)
BuildRequires : valgrind
BuildRequires : yaml-dev
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}
Patch1: prefix.patch
Patch2: 0001-Disable-Werror.patch
Patch3: 0002-Fix-library-installation-path.patch

%description
# Device Tree Compiler and libfdt
The source tree contains the Device Tree Compiler (dtc) toolchain for
working with device tree source and binary files and also libfdt, a
utility library for reading and manipulating the binary format.

%package bin
Summary: bin components for the dtc package.
Group: Binaries
Requires: dtc-license = %{version}-%{release}

%description bin
bin components for the dtc package.


%package dev
Summary: dev components for the dtc package.
Group: Development
Requires: dtc-lib = %{version}-%{release}
Requires: dtc-bin = %{version}-%{release}
Provides: dtc-devel = %{version}-%{release}
Requires: dtc = %{version}-%{release}

%description dev
dev components for the dtc package.


%package lib
Summary: lib components for the dtc package.
Group: Libraries
Requires: dtc-license = %{version}-%{release}

%description lib
lib components for the dtc package.


%package license
Summary: license components for the dtc package.
Group: Default

%description license
license components for the dtc package.


%package staticdev
Summary: staticdev components for the dtc package.
Group: Default
Requires: dtc-dev = %{version}-%{release}

%description staticdev
staticdev components for the dtc package.


%prep
%setup -q -n dtc-1.7.0
cd %{_builddir}/dtc-1.7.0
%patch -P 1 -p1
%patch -P 2 -p1
%patch -P 3 -p1

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1706633707
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
CLEAR_INTERMEDIATE_CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FCFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS"
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS"
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS"
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS"
ASFLAGS="$CLEAR_INTERMEDIATE_ASFLAGS"
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS"
meson --libdir=lib64 --prefix=/usr --buildtype=plain   builddir
ninja -v -C builddir

%install
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
CLEAR_INTERMEDIATE_CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FCFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS"
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS"
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS"
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS"
ASFLAGS="$CLEAR_INTERMEDIATE_ASFLAGS"
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS"
mkdir -p %{buildroot}/usr/share/package-licenses/dtc
cp %{_builddir}/dtc-%{version}/README.license %{buildroot}/usr/share/package-licenses/dtc/a6759c569917866b44961c88629ae4f3f07ea686 || :
DESTDIR=%{buildroot} ninja -C builddir install

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/convert-dtsv0
/usr/bin/dtc
/usr/bin/dtdiff
/usr/bin/fdtdump
/usr/bin/fdtget
/usr/bin/fdtoverlay
/usr/bin/fdtput

%files dev
%defattr(-,root,root,-)
/usr/include/fdt.h
/usr/include/libfdt.h
/usr/include/libfdt_env.h
/usr/lib64/pkgconfig/libfdt.pc

%files lib
%defattr(-,root,root,-)
/usr/lib64/libfdt.so
/usr/lib64/libfdt.so.1
/usr/lib64/libfdt.so.1.6.0

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/dtc/a6759c569917866b44961c88629ae4f3f07ea686

%files staticdev
%defattr(-,root,root,-)
/usr/lib64/libfdt.a
